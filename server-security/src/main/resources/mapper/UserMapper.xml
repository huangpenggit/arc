<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.security.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.security.domain.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="open_id" property="openId"/>
        <result column="access_token" property="accessToken"/>
        <result column="subscribe" property="subscribe"/>
        <result column="remark" property="remark"/>
        <result column="sex" property="sex"/>
        <result column="headimgurl" property="headimgurl"/>
        <result column="subscribe_time" property="subscribeTime"/>
        <result column="unsubscribe_time" property="unsubscribeTime"/>
        <result column="becomeVip_time" property="becomevipTime"/>
        <result column="totalPoint" property="totalpoint"/>
        <result column="cardNumber" property="cardnumber"/>
        <result column="vipLevel" property="viplevel"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `user`
    where id = #{id}
  </delete>
    <insert id="insert" parameterType="com.security.domain.User" useGeneratedKeys="true" keyProperty="id">
    insert into `user` (username, password, nickname, open_id, access_token, subscribe, 
      remark, sex, headimgurl, subscribe_time, unsubscribe_time, becomeVip_time, 
      totalPoint, cardNumber, vipLevel)
    values (#{username}, #{password}, #{nickname}, #{openId}, #{accessToken}, #{subscribe}, 
      #{remark}, #{sex}, #{headimgurl}, #{subscribeTime}, #{unsubscribeTime}, #{becomevipTime}, 
      #{totalpoint}, #{cardnumber}, #{viplevel})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.security.domain.User">
    update `user`
    set username = #{username},
      password = #{password},
      nickname = #{nickname},
      open_id = #{openId},
      access_token = #{accessToken},
      subscribe = #{subscribe},
      remark = #{remark},
      sex = #{sex},
      headimgurl = #{headimgurl},
      subscribe_time = #{subscribeTime},
      unsubscribe_time = #{unsubscribeTime},
      becomeVip_time = #{becomevipTime},
      totalPoint = #{totalpoint},
      cardNumber = #{cardnumber},
      vipLevel = #{viplevel}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, username, password, nickname, open_id, access_token, subscribe, remark,
    sex, headimgurl, subscribe_time, unsubscribe_time, becomeVip_time, totalPoint, cardNumber, 
    vipLevel
    from `user`
    where id = #{id}
  </select>
    <select id="selectByUsername" resultMap="BaseResultMap">
    select id, username, password, nickname, open_id, access_token, subscribe, remark,
    sex, headimgurl, subscribe_time, unsubscribe_time, becomeVip_time, totalPoint, cardNumber,
    vipLevel
    from `user`
    where username = #{username}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, password, nickname, open_id, access_token, subscribe, remark, 
    sex, headimgurl, subscribe_time, unsubscribe_time, becomeVip_time, totalPoint, cardNumber, 
    vipLevel
    from `user`
  </select>
</mapper>